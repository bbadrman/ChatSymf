{
  "version": 3,
  "sources": ["../../preact/src/constants.js", "../../preact/src/util.js", "../../preact/src/options.js", "../../preact/src/create-element.js", "../../preact/src/component.js", "../../preact/src/diff/props.js", "../../preact/src/create-context.js", "../../preact/src/diff/children.js", "../../preact/src/diff/index.js", "../../preact/src/render.js", "../../preact/src/clone-element.js", "../../preact/src/diff/catch-error.js", "../../preact/hooks/src/index.js"],
  "sourcesContent": ["/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 16;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 17;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { EMPTY_ARR } from './constants';\n\nexport const isArray = Array.isArray;\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-expect-error We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {preact.ContainerNode} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n", "import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n", "import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {VNode[\"type\"]} type The node name or Component constructor for this\n * virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the\n * virtual node\n * @returns {VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\t/** @type {VNode} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original,\n\t\t_index: -1,\n\t\t_flags: 0\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor == undefined;\n", "import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\nimport { MODE_HYDRATE } from './constants';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function BaseComponent(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nBaseComponent.prototype.setState = function (update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nBaseComponent.prototype.forceUpdate = function (callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {ComponentChildren | void}\n */\nBaseComponent.prototype.render = Fragment;\n\n/**\n * @param {VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._index + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet oldVNode = component._vnode,\n\t\toldDom = oldVNode._dom,\n\t\tcommitQueue = [],\n\t\trefQueue = [];\n\n\tif (component._parentDom) {\n\t\tconst newVNode = assign({}, oldVNode);\n\t\tnewVNode._original = oldVNode._original + 1;\n\t\tif (options.vnode) options.vnode(newVNode);\n\n\t\tdiff(\n\t\t\tcomponent._parentDom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tcomponent._parentDom.ownerSVGElement !== undefined,\n\t\t\toldVNode._flags & MODE_HYDRATE ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(oldVNode) : oldDom,\n\t\t\t!!(oldVNode._flags & MODE_HYDRATE),\n\t\t\trefQueue\n\t\t);\n\n\t\tnewVNode._original = oldVNode._original;\n\t\tnewVNode._parent._children[newVNode._index] = newVNode;\n\t\tcommitRoot(commitQueue, newVNode, refQueue);\n\n\t\tif (newVNode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(newVNode);\n\t\t}\n\t}\n}\n\n/**\n * @param {VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {Component} a\n * @param {Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c;\n\trerenderQueue.sort(depthSort);\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile ((c = rerenderQueue.shift())) {\n\t\tif (c._dirty) {\n\t\t\tlet renderQueueLength = rerenderQueue.length;\n\t\t\trenderComponent(c);\n\t\t\tif (rerenderQueue.length > renderQueueLength) {\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t\t\t// single pass\n\t\t\t\trerenderQueue.sort(depthSort);\n\t\t\t}\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n", "import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value == null ? '' : value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n// A logical clock to solve issues like https://github.com/preactjs/preact/issues/3927.\n// When the DOM performs an event it leaves micro-ticks in between bubbling up which means that\n// an event can trigger on a newly reated DOM-node while the event bubbles up.\n//\n// Originally inspired by Vue\n// (https://github.com/vuejs/core/blob/caeb8a68811a1b0f79/packages/runtime-dom/src/modules/events.ts#L90-L101),\n// but modified to use a logical clock instead of Date.now() in case event handlers get attached\n// and events get dispatched during the same millisecond.\n//\n// The clock is incremented after each new event dispatch. This allows 1 000 000 new events\n// per second for over 280 years before the value reaches Number.MAX_SAFE_INTEGER (2**53 - 1).\nlet eventClock = 0;\n\n/**\n * Set a property value on a DOM node\n * @param {PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture =\n\t\t\tname !== (name = name.replace(/(PointerCapture)$|Capture$/i, '$1'));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (\n\t\t\tname.toLowerCase() in dom ||\n\t\t\tname === 'onFocusOut' ||\n\t\t\tname === 'onFocusIn'\n\t\t)\n\t\t\tname = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tvalue._attached = eventClock;\n\t\t\t\tdom.addEventListener(\n          name,\n          useCapture ? eventProxyCapture : eventProxy,\n          useCapture\n        );\n\t\t\t} else {\n\t\t\t\tvalue._attached = oldValue._attached;\n\t\t\t}\n\t\t} else {\n\t\t\tdom.removeEventListener(\n\t\t\t\tname,\n\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\tuseCapture\n\t\t\t);\n\t\t}\n\t} else {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname != 'width' &&\n\t\t\tname != 'height' &&\n\t\t\tname != 'href' &&\n\t\t\tname != 'list' &&\n\t\t\tname != 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname != 'tabIndex' &&\n\t\t\tname != 'download' &&\n\t\t\tname != 'rowSpan' &&\n\t\t\tname != 'colSpan' &&\n\t\t\tname != 'role' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// aria- and data- attributes have no boolean representation.\n\t\t// A `false` value is different from the attribute not being\n\t\t// present, so we can't remove it. For non-boolean aria\n\t\t// attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost too many bytes. On top of\n\t\t// that other frameworks generally stringify `false`.\n\n\t\tif (typeof value == 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name[4] === '-')) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Create an event proxy function.\n * @param {boolean} useCapture Is the event handler for the capture phase.\n * @private\n */\nfunction createEventProxy(useCapture) {\n\t/**\n\t * Proxy an event to hooked event handlers\n\t * @param {PreactEvent} e The event object from the browser\n\t * @private\n\t */\n\treturn function (e) {\n\t\tif (this._listeners) {\n\t\t\tconst eventHandler = this._listeners[e.type + useCapture];\n\t\t\tif (e._dispatched == null) {\n\t\t\t\te._dispatched = eventClock++;\n\n\t\t\t\t// When `e._dispatched` is smaller than the time when the targeted event\n\t\t\t\t// handler was attached we know we have bubbled up to an element that was added\n\t\t\t\t// during patching the DOM.\n\t\t\t} else if (e._dispatched < eventHandler._attached) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn eventHandler(options.event ? options.event(e) : e);\n\t\t}\n\t};\n}\n\nconst eventProxy = createEventProxy(false);\nconst eventProxyCapture = createEventProxy(true);\n", "import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\t/** @type {Component[]} */\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function (_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(c => {\n\t\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType =\n\t\tcontext);\n}\n", "import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR, INSERT_VNODE, MATCHED } from '../constants';\nimport { isArray } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {PreactElement} parentDom The DOM element whose children are being\n * diffed\n * @param {ComponentChildren[]} renderResult\n * @param {VNode} newParentVNode The new virtual node whose children should be\n * diff'ed against oldParentVNode\n * @param {VNode} oldParentVNode The old virtual node whose children should be\n * diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by\n * getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\tlet i,\n\t\t/** @type {VNode} */\n\t\toldVNode,\n\t\t/** @type {VNode} */\n\t\tchildVNode,\n\t\t/** @type {PreactElement} */\n\t\tnewDom,\n\t\t/** @type {PreactElement} */\n\t\tfirstChildDom;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\t/** @type {VNode[]} */\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet newChildrenLength = renderResult.length;\n\n\tnewParentVNode._nextDom = oldDom;\n\tconstructNewChildrenArray(newParentVNode, renderResult, oldChildren);\n\toldDom = newParentVNode._nextDom;\n\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\tchildVNode = newParentVNode._children[i];\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// At this point, constructNewChildrenArray has assigned _index to be the\n\t\t// matchingIndex for this VNode's oldVNode (or -1 if there is no oldVNode).\n\t\tif (childVNode._index === -1) {\n\t\t\toldVNode = EMPTY_OBJ;\n\t\t} else {\n\t\t\toldVNode = oldChildren[childVNode._index] || EMPTY_OBJ;\n\t\t}\n\n\t\t// Update childVNode._index to its final index\n\t\tchildVNode._index = i;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\n\t\t// Adjust DOM nodes\n\t\tnewDom = childVNode._dom;\n\t\tif (childVNode.ref && oldVNode.ref != childVNode.ref) {\n\t\t\tif (oldVNode.ref) {\n\t\t\t\tapplyRef(oldVNode.ref, null, childVNode);\n\t\t\t}\n\t\t\trefQueue.push(\n\t\t\t\tchildVNode.ref,\n\t\t\t\tchildVNode._component || newDom,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t}\n\n\t\tif (firstChildDom == null && newDom != null) {\n\t\t\tfirstChildDom = newDom;\n\t\t}\n\n\t\tif (\n\t\t\tchildVNode._flags & INSERT_VNODE ||\n\t\t\toldVNode._children === childVNode._children\n\t\t) {\n\t\t\t// @ts-expect-error olDom should be present on a DOM node\n\t\t\tif (oldDom && !oldDom.isConnected) {\n\t\t\t\toldDom = getDomSibling(oldVNode);\n\t\t\t}\n\t\t\toldDom = insert(childVNode, oldDom, parentDom);\n\t\t} else if (\n\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\tchildVNode._nextDom !== undefined\n\t\t) {\n\t\t\t// Since Fragments or components that return Fragment like VNodes can\n\t\t\t// contain multiple DOM nodes as the same level, continue the diff from\n\t\t\t// the sibling of last DOM child of this child VNode\n\t\t\toldDom = childVNode._nextDom;\n\t\t} else if (newDom) {\n\t\t\toldDom = newDom.nextSibling;\n\t\t}\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because it\n\t\t// is only used by `diffChildren` to determine where to resume the diff\n\t\t// after diffing Components and Fragments. Once we store it the nextDOM\n\t\t// local var, we can clean up the property. Also prevents us hanging on to\n\t\t// DOM nodes that may have been unmounted.\n\t\tchildVNode._nextDom = undefined;\n\n\t\t// Unset diffing flags\n\t\tchildVNode._flags &= ~(INSERT_VNODE | MATCHED);\n\t}\n\n\t// TODO: With new child diffing algo, consider alt ways to diff Fragments.\n\t// Such as dropping oldDom and moving fragments in place\n\t//\n\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t// _nextDom property to the nextSibling of its last child DOM node.\n\t//\n\t// `oldDom` contains the correct value here because if the last child\n\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t// node's nextSibling.\n\tnewParentVNode._nextDom = oldDom;\n\tnewParentVNode._dom = firstChildDom;\n}\n\n/**\n * @param {VNode} newParentVNode\n * @param {ComponentChildren[]} renderResult\n * @param {VNode[]} oldChildren\n */\nfunction constructNewChildrenArray(newParentVNode, renderResult, oldChildren) {\n\t/** @type {number} */\n\tlet i;\n\t/** @type {VNode} */\n\tlet childVNode;\n\t/** @type {VNode} */\n\tlet oldVNode;\n\n\tconst newChildrenLength = renderResult.length;\n\tlet oldChildrenLength = oldChildren.length,\n\t\tremainingOldChildren = oldChildrenLength;\n\n\tlet skew = 0;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\t// @ts-expect-error We are reusing the childVNode variable to hold both the\n\t\t// pre and post normalized childVNode\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint' ||\n\t\t\tchildVNode.constructor == String\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode.constructor === undefined && childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\tconst skewedIndex = i + skew;\n\n\t\t// Handle unmounting null placeholders, i.e. VNode => null in unkeyed children\n\t\tif (childVNode == null) {\n\t\t\toldVNode = oldChildren[skewedIndex];\n\t\t\tif (\n\t\t\t\toldVNode &&\n\t\t\t\toldVNode.key == null &&\n\t\t\t\toldVNode._dom &&\n\t\t\t\t(oldVNode._flags & MATCHED) === 0\n\t\t\t) {\n\t\t\t\tif (oldVNode._dom == newParentVNode._nextDom) {\n\t\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode, false);\n\n\t\t\t\t// Explicitly nullify this position in oldChildren instead of just\n\t\t\t\t// setting `_match=true` to prevent other routines (e.g.\n\t\t\t\t// `findMatchingIndex` or `getDomSibling`) from thinking VNodes or DOM\n\t\t\t\t// nodes in this position are still available to be used in diffing when\n\t\t\t\t// they have actually already been unmounted. For example, by only\n\t\t\t\t// setting `_match=true` here, the unmounting loop later would attempt\n\t\t\t\t// to unmount this VNode again seeing `_match==true`.  Further,\n\t\t\t\t// getDomSibling doesn't know about _match and so would incorrectly\n\t\t\t\t// assume DOM nodes in this subtree are mounted and usable.\n\t\t\t\toldChildren[skewedIndex] = null;\n\t\t\t\tremainingOldChildren--;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\tconst matchingIndex = findMatchingIndex(\n\t\t\tchildVNode,\n\t\t\toldChildren,\n\t\t\tskewedIndex,\n\t\t\tremainingOldChildren\n\t\t);\n\n\t\t// Temporarily store the matchingIndex on the _index property so we can pull\n\t\t// out the oldVNode in diffChildren. We'll override this to the VNode's\n\t\t// final index after using this property to get the oldVNode\n\t\tchildVNode._index = matchingIndex;\n\n\t\toldVNode = null;\n\t\tif (matchingIndex !== -1) {\n\t\t\toldVNode = oldChildren[matchingIndex];\n\t\t\tremainingOldChildren--;\n\t\t\tif (oldVNode) {\n\t\t\t\toldVNode._flags |= MATCHED;\n\t\t\t}\n\t\t}\n\n\t\t// Here, we define isMounting for the purposes of the skew diffing\n\t\t// algorithm. Nodes that are unsuspending are considered mounting and we detect\n\t\t// this by checking if oldVNode._original === null\n\t\tconst isMounting = oldVNode == null || oldVNode._original === null;\n\n\t\tif (isMounting) {\n\t\t\tif (matchingIndex == -1) {\n\t\t\t\tskew--;\n\t\t\t}\n\n\t\t\t// If we are mounting a DOM VNode, mark it for insertion\n\t\t\tif (typeof childVNode.type != 'function') {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t} else if (matchingIndex !== skewedIndex) {\n\t\t\tif (matchingIndex === skewedIndex + 1) {\n\t\t\t\tskew++;\n\t\t\t} else if (matchingIndex > skewedIndex) {\n\t\t\t\tif (remainingOldChildren > newChildrenLength - skewedIndex) {\n\t\t\t\t\tskew += matchingIndex - skewedIndex;\n\t\t\t\t} else {\n\t\t\t\t\tskew--;\n\t\t\t\t}\n\t\t\t} else if (matchingIndex < skewedIndex) {\n\t\t\t\tif (matchingIndex == skewedIndex - 1) {\n\t\t\t\t\tskew = matchingIndex - skewedIndex;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tskew = 0;\n\t\t\t}\n\n\t\t\t// Move this VNode's DOM if the original index (matchingIndex) doesn't\n\t\t\t// match the new skew index (i + new skew)\n\t\t\tif (matchingIndex !== i + skew) {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove remaining oldChildren if there are any. Loop forwards so that as we\n\t// unmount DOM from the beginning of the oldChildren, we can adjust oldDom to\n\t// point to the next child, which needs to be the first DOM node that won't be\n\t// unmounted.\n\tif (remainingOldChildren) {\n\t\tfor (i = 0; i < oldChildrenLength; i++) {\n\t\t\toldVNode = oldChildren[i];\n\t\t\tif (oldVNode != null && (oldVNode._flags & MATCHED) === 0) {\n\t\t\t\tif (oldVNode._dom == newParentVNode._nextDom) {\n\t\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {VNode} parentVNode\n * @param {PreactElement} oldDom\n * @param {PreactElement} parentDom\n * @returns {PreactElement}\n */\nfunction insert(parentVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\n\tif (typeof parentVNode.type == 'function') {\n\t\tlet children = parentVNode._children;\n\t\tfor (let i = 0; children && i < children.length; i++) {\n\t\t\tif (children[i]) {\n\t\t\t\t// If we enter this code path on sCU bailout, where we copy\n\t\t\t\t// oldVNode._children to newVNode._children, we need to update the old\n\t\t\t\t// children's _parent pointer to point to the newVNode (parentVNode\n\t\t\t\t// here).\n\t\t\t\tchildren[i]._parent = parentVNode;\n\t\t\t\toldDom = insert(children[i], oldDom, parentDom);\n\t\t\t}\n\t\t}\n\n\t\treturn oldDom;\n\t} else if (parentVNode._dom != oldDom) {\n\t\tparentDom.insertBefore(parentVNode._dom, oldDom || null);\n\t\toldDom = parentVNode._dom;\n\t}\n\n\tdo {\n\t\toldDom = oldDom && oldDom.nextSibling;\n\t} while (oldDom != null && oldDom.nodeType === 8);\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {ComponentChildren} children The unflattened children of a virtual\n * node\n * @returns {VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\n/**\n * @param {VNode} childVNode\n * @param {VNode[]} oldChildren\n * @param {number} skewedIndex\n * @param {number} remainingOldChildren\n * @returns {number}\n */\nfunction findMatchingIndex(\n\tchildVNode,\n\toldChildren,\n\tskewedIndex,\n\tremainingOldChildren\n) {\n\tconst key = childVNode.key;\n\tconst type = childVNode.type;\n\tlet x = skewedIndex - 1;\n\tlet y = skewedIndex + 1;\n\tlet oldVNode = oldChildren[skewedIndex];\n\n\t// We only need to perform a search if there are more children\n\t// (remainingOldChildren) to search. However, if the oldVNode we just looked\n\t// at skewedIndex was not already used in this diff, then there must be at\n\t// least 1 other (so greater than 1) remainingOldChildren to attempt to match\n\t// against. So the following condition checks that ensuring\n\t// remainingOldChildren > 1 if the oldVNode is not already used/matched. Else\n\t// if the oldVNode was null or matched, then there could needs to be at least\n\t// 1 (aka `remainingOldChildren > 0`) children to find and compare against.\n\tlet shouldSearch =\n\t\tremainingOldChildren >\n\t\t(oldVNode != null && (oldVNode._flags & MATCHED) === 0 ? 1 : 0);\n\n\tif (\n\t\toldVNode === null ||\n\t\t(oldVNode &&\n\t\t\tkey == oldVNode.key &&\n\t\t\ttype === oldVNode.type &&\n\t\t\t(oldVNode._flags & MATCHED) === 0)\n\t) {\n\t\treturn skewedIndex;\n\t} else if (shouldSearch) {\n\t\twhile (x >= 0 || y < oldChildren.length) {\n\t\t\tif (x >= 0) {\n\t\t\t\toldVNode = oldChildren[x];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) === 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t\tx--;\n\t\t\t}\n\n\t\t\tif (y < oldChildren.length) {\n\t\t\t\toldVNode = oldChildren[y];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) === 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn y;\n\t\t\t\t}\n\t\t\t\ty++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn -1;\n}\n", "import {\n\tEMPTY_OBJ,\n\tMODE_HYDRATE,\n\tMODE_SUSPENDED,\n\tRESET_MODE\n} from '../constants';\nimport { BaseComponent, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { setProperty } from './props';\nimport { assign, isArray, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {PreactElement} parentDom The parent of the DOM element\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by\n * getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\t/** @type {any} */\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._flags & MODE_SUSPENDED) {\n\t\tisHydrating = !!(oldVNode._flags & MODE_HYDRATE);\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\touter: if (typeof newType == 'function') {\n\t\ttry {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-expect-error The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-expect-error Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new BaseComponent(\n\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!c._force &&\n\t\t\t\t\t((c.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\t\tnewVNode._original === oldVNode._original)\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\t\t\tc._force = false;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tisArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._flags &= RESET_MODE;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tnewVNode._original = null;\n\t\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\t\tnewVNode._dom = oldDom;\n\t\t\t\tnewVNode._flags |= isHydrating\n\t\t\t\t\t? MODE_HYDRATE | MODE_SUSPENDED\n\t\t\t\t\t: MODE_HYDRATE;\n\t\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t\t// ^ could possibly be simplified to:\n\t\t\t\t// excessDomChildren.length = 0;\n\t\t\t} else {\n\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t}\n\t\t\toptions._catchError(e, newVNode, oldVNode);\n\t\t}\n\t} else if (\n\t\texcessDomChildren == null &&\n\t\tnewVNode._original === oldVNode._original\n\t) {\n\t\tnewVNode._children = oldVNode._children;\n\t\tnewVNode._dom = oldVNode._dom;\n\t} else {\n\t\tnewVNode._dom = diffElementNodes(\n\t\t\toldVNode._dom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\t}\n\n\tif ((tmp = options.diffed)) tmp(newVNode);\n}\n\n/**\n * @param {Array<Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {VNode} root\n */\nexport function commitRoot(commitQueue, root, refQueue) {\n\troot._nextDom = undefined;\n\n\tfor (let i = 0; i < refQueue.length; i++) {\n\t\tapplyRef(refQueue[i], refQueue[++i], refQueue[++i]);\n\t}\n\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-expect-error Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-expect-error See above comment on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {PreactElement} dom The DOM element representing the virtual nodes\n * being diffed\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n * @returns {PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating,\n\trefQueue\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = /** @type {string} */ (newVNode.type);\n\t/** @type {any} */\n\tlet i;\n\t/** @type {{ __html?: string }} */\n\tlet newHtml;\n\t/** @type {{ __html?: string }} */\n\tlet oldHtml;\n\t/** @type {ComponentChildren} */\n\tlet newChildren;\n\tlet value;\n\tlet inputValue;\n\tlet checked;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (i = 0; i < excessDomChildren.length; i++) {\n\t\t\tvalue = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tvalue &&\n\t\t\t\t'setAttribute' in value === !!nodeType &&\n\t\t\t\t(nodeType ? value.localName === nodeType : value.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = value;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS('http://www.w3.org/2000/svg', nodeType);\n\t\t} else {\n\t\t\tdom = document.createElement(nodeType, newProps.is && newProps);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in\n\t\t// case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\t// If we are in a situation where we are not hydrating but are using\n\t\t// existing DOM (e.g. replaceNode) we should read the existing DOM\n\t\t// attributes to diff them\n\t\tif (!isHydrating && excessDomChildren != null) {\n\t\t\toldProps = {};\n\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\tvalue = dom.attributes[i];\n\t\t\t\toldProps[value.name] = value.value;\n\t\t\t}\n\t\t}\n\n\t\tfor (i in oldProps) {\n\t\t\tvalue = oldProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\toldHtml = value;\n\t\t\t} else if (i !== 'key' && !(i in newProps)) {\n\t\t\t\tif (\n\t\t\t\t\t(i == 'value' && 'defaultValue' in newProps) ||\n\t\t\t\t\t(i == 'checked' && 'defaultChecked' in newProps)\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tsetProperty(dom, i, null, value, isSvg);\n\t\t\t}\n\t\t}\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tfor (i in newProps) {\n\t\t\tvalue = newProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t\tnewChildren = value;\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\tnewHtml = value;\n\t\t\t} else if (i == 'value') {\n\t\t\t\tinputValue = value;\n\t\t\t} else if (i == 'checked') {\n\t\t\t\tchecked = value;\n\t\t\t} else if (\n\t\t\t\ti !== 'key' &&\n\t\t\t\t(!isHydrating || typeof value == 'function') &&\n\t\t\t\toldProps[i] !== value\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, value, oldProps[i], isSvg);\n\t\t\t}\n\t\t}\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\tif (\n\t\t\t\t!isHydrating &&\n\t\t\t\t(!oldHtml ||\n\t\t\t\t\t(newHtml.__html !== oldHtml.__html &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML))\n\t\t\t) {\n\t\t\t\tdom.innerHTML = newHtml.__html;\n\t\t\t}\n\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\tif (oldHtml) dom.innerHTML = '';\n\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tisArray(newChildren) ? newChildren : [newChildren],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// As above, don't diff props during hydration\n\t\tif (!isHydrating) {\n\t\t\ti = 'value';\n\t\t\tif (\n\t\t\t\tinputValue !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(inputValue !== dom[i] ||\n\t\t\t\t\t(nodeType === 'progress' && !inputValue) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && inputValue !== oldProps[i]))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, inputValue, oldProps[i], false);\n\t\t\t}\n\n\t\t\ti = 'checked';\n\t\t\tif (checked !== undefined && checked !== dom[i]) {\n\t\t\t\tsetProperty(dom, i, checked, oldProps[i], false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {Ref<any>} ref\n * @param {any} value\n * @param {VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {VNode} vnode The virtual node to unmount\n * @param {VNode} parentVNode The parent of the VNode that initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type != 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._component = vnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n", "import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {ComponentChild} vnode The virtual node to render\n * @param {PreactElement} parentDom The DOM element to render into\n * @param {PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode == 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = ((!isHydrating && replaceNode) || parentDom)._children =\n\t\tcreateElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [],\n\t\trefQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating,\n\t\trefQueue\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode, refQueue);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {ComponentChild} vnode The virtual node to render\n * @param {PreactElement} parentDom The DOM element to update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n", "import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<ComponentChildren>} rest Any additional arguments will be used\n * as replacement children.\n * @returns {VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\n\tlet defaultProps;\n\n\tif (vnode.type && vnode.type.defaultProps) {\n\t\tdefaultProps = vnode.type.defaultProps;\n\t}\n\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse if (props[i] === undefined && defaultProps !== undefined) {\n\t\t\tnormalizedProps[i] = defaultProps[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n", "/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {VNode} vnode The vnode that threw the error that was caught (except\n * for unmounting when this parameter is the highest parent that was being\n * unmounted)\n * @param {VNode} [oldVNode]\n * @param {ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {Component} */\n\tlet component,\n\t\t/** @type {ComponentType} */\n\t\tctor,\n\t\t/** @type {boolean} */\n\t\thandled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n", "import { options as _options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\n// Cast to use internal Options type\nconst options = /** @type {import('./internal').Options} */ (_options);\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\nlet oldRoot = options._root;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._root = (vnode, parentDom) => {\n\tif (vnode && parentDom._children && parentDom._children._mask) {\n\t\tvnode._mask = parentDom._children._mask;\n\t}\n\n\tif (oldRoot) oldRoot(vnode, parentDom);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentIndex = 0;\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\n// TODO: Improve typing of commitQueue parameter\n/** @type {(vnode: import('./internal').VNode, commitQueue: any) => void} */\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\n\treturn hooks._list[index];\n}\n\n/**\n * @template {unknown} S\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} [initialState]\n * @returns {[S, (state: S) => void]}\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @template {unknown} S\n * @template {unknown} A\n * @param {import('./index').Reducer<S, A>} reducer\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ S, (state: S) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function (p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\t/** @type {(x: import('./internal').HookState) => x is import('./internal').ReducerHookState} */\n\t\t\t\tconst isStateHook = x => !!x._component;\n\t\t\t\tconst stateHooks =\n\t\t\t\t\thookState._component.__hooks._list.filter(isStateHook);\n\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\n/** @type {(initialValue: unknown) => unknown} */\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @template {unknown} T\n * @param {() => T} factory\n * @param {unknown[]} args\n * @returns {T}\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState<T>} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {unknown[]} args\n * @returns {() => void}\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(\n\t\t\tformatter ? formatter(value) : /** @type {any}*/ (value)\n\t\t);\n\t}\n}\n\n/**\n * @param {(error: unknown, errorInfo: import('preact').ErrorInfo) => void} cb\n * @returns {[unknown, () => void]}\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/** @type {() => string} */\nexport function useId() {\n\t/** @type {import('./internal').IdHookState} */\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal.d').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n * @returns {void}\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').HookState} hook\n * @returns {void}\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n * @returns {void}\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {unknown[]} oldArgs\n * @param {unknown[]} newArgs\n * @returns {boolean}\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\n/**\n * @template Arg\n * @param {Arg} arg\n * @param {(arg: Arg) => any} f\n * @returns {any}\n */\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n"],
  "mappings": "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",
  "names": ["MODE_HYDRATE", "slice", "options", "vnodeId", "isValidElement", "rerenderQueue", "prevDebounce", "defer", "depthSort", "eventClock", "eventProxy", "eventProxyCapture", "i", "EMPTY_OBJ", "EMPTY_ARR", "IS_NON_DIMENSIONAL", "isArray", "Array", "assign", "obj", "props", "removeNode", "node", "parentNode", "removeChild", "createElement", "type", "children", "key", "ref", "normalizedProps", "arguments", "length", "call", "defaultProps", "createVNode", "original", "vnode", "__k", "__", "__b", "__e", "__d", "__c", "constructor", "__v", "__i", "__u", "createRef", "current", "Fragment", "BaseComponent", "context", "this", "getDomSibling", "childIndex", "sibling", "updateParentDomPointers", "child", "base", "enqueueRender", "c", "push", "process", "debounceRendering", "renderQueueLength", "component", "newVNode", "oldVNode", "oldDom", "commitQueue", "refQueue", "sort", "shift", "__P", "diff", "__n", "ownerSVGElement", "commitRoot", "diffChildren", "parentDom", "renderResult", "newParentVNode", "oldParentVNode", "globalContext", "isSvg", "excessDomChildren", "isHydrating", "childVNode", "newDom", "firstChildDom", "oldChildren", "newChildrenLength", "constructNewChildrenArray", "applyRef", "isConnected", "insert", "nextSibling", "skewedIndex", "matchingIndex", "oldChildrenLength", "remainingOldChildren", "skew", "String", "findMatchingIndex", "unmount", "parentVNode", "insertBefore", "nodeType", "toChildArray", "out", "some", "x", "y", "setStyle", "style", "value", "setProperty", "test", "dom", "name", "oldValue", "useCapture", "o", "cssText", "replace", "toLowerCase", "l", "_attached", "addEventListener", "removeEventListener", "e", "removeAttribute", "setAttribute", "createEventProxy", "eventHandler", "_dispatched", "event", "tmp", "isNew", "oldProps", "oldState", "snapshot", "clearProcessingException", "newProps", "provider", "componentContext", "renderHook", "count", "newType", "outer", "contextType", "__E", "prototype", "render", "doRender", "sub", "state", "__h", "_sb", "__s", "getDerivedStateFromProps", "componentWillMount", "componentDidMount", "componentWillReceiveProps", "shouldComponentUpdate", "forEach", "componentWillUpdate", "componentDidUpdate", "__r", "getChildContext", "getSnapshotBeforeUpdate", "indexOf", "diffElementNodes", "diffed", "root", "cb", "newHtml", "oldHtml", "newChildren", "inputValue", "checked", "localName", "document", "createTextNode", "createElementNS", "is", "data", "childNodes", "attributes", "__html", "innerHTML", "skipRemove", "r", "componentWillUnmount", "replaceNode", "firstChild", "hydrate", "cloneElement", "createContext", "defaultValue", "contextId", "Consumer", "contextValue", "Provider", "subs", "ctx", "_props", "old", "splice", "error", "errorInfo", "ctor", "handled", "getDerivedStateFromError", "setState", "componentDidCatch", "undefined", "update", "callback", "s", "forceUpdate", "Promise", "then", "bind", "resolve", "setTimeout", "a", "b", "currentIndex", "currentComponent", "previousComponent", "prevRaf", "currentHook", "afterPaintEffects", "EMPTY", "options", "_options", "oldBeforeDiff", "__b", "oldBeforeRender", "__r", "oldAfterDiff", "diffed", "oldCommit", "__c", "oldBeforeUnmount", "unmount", "oldRoot", "__", "getHookState", "index", "type", "__h", "hooks", "__H", "length", "push", "__V", "useState", "initialState", "useReducer", "invokeOrReturn", "reducer", "init", "hookState", "_reducer", "action", "currentValue", "__N", "nextValue", "setState", "_hasScuFromHooks", "updateHookState", "p", "s", "c", "stateHooks", "filter", "x", "every", "prevScu", "call", "this", "shouldUpdate", "forEach", "hookItem", "props", "shouldComponentUpdate", "prevCWU", "componentWillUpdate", "__e", "tmp", "useEffect", "callback", "args", "state", "argsChanged", "_pendingArgs", "useLayoutEffect", "__s", "useRef", "initialValue", "useMemo", "current", "useImperativeHandle", "ref", "createHandle", "concat", "factory", "useCallback", "useContext", "context", "provider", "sub", "value", "useDebugValue", "formatter", "useErrorBoundary", "cb", "errState", "componentDidCatch", "err", "errorInfo", "undefined", "useId", "root", "__m", "mask", "flushAfterPaintEffects", "component", "shift", "__P", "invokeCleanup", "invokeEffect", "e", "__v", "vnode", "parentDom", "__k", "requestAnimationFrame", "afterNextFrame", "commitQueue", "some", "hasErrored", "HAS_RAF", "raf", "done", "clearTimeout", "timeout", "cancelAnimationFrame", "setTimeout", "hook", "comp", "cleanup", "oldArgs", "newArgs", "arg", "f"]
}
